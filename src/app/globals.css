@import "tailwindcss";

@theme {
    /**
     * ========================================================================
     * Theming Strategy: CSS Variable Aliasing
     *
     * We use a two-tiered CSS variable system:
     *
     * 1. **Raw Value Tokens** (e.g., `--color-primary-500`) — hold literal
     *    values. Treat these as _implementation details_.
     * 2. **Semantic Alias Tokens** (e.g., `--color-primary`) — reference raw
     *    tokens via `var()`. Components and Tailwind class mappings **must use
     *    these aliases**.
     *
     * Only the semantic aliases are surfaced in `tailwind.config.ts`, giving
     * you shorthand classes like `bg-primary` and `bg-primary-hover`. The raw
     * `*-500` tokens remain here for fine-grained tweaks or future design
     * variants but are not meant to be used directly in markup.
     *
     * **Why two files?**  Keeping tokens in CSS means they exist at runtime
     * (enabling instant theme switches).  Tailwind classes are generated at
     * build time from `tailwind.config.ts`, giving developers short, safe
     * utility names without duplicating values.
     * ========================================================================
     */

    /**
     * ========================================================================
     * Color Palette
     *
     * Defines the core color tokens for the Website. Each color has a base
     * value and a corresponding hover state.
     * ========================================================================
     */

    /** @theme A color used for primary actions and highlights. */
    --color-primary-500: #2077a2;
    --color-primary: var(--color-primary-500);
    --color-primary-hover: color-mix(
        in srgb,
        var(--color-primary) var(--opacity-hover),
        transparent
    );

    /** @theme A color for secondary elements. */
    --color-secondary-500: #07456e;
    --color-secondary: var(--color-secondary-500);
    --color-secondary-hover: color-mix(
        in srgb,
        var(--color-secondary) var(--opacity-hover),
        transparent
    );

    /** @theme Used for call-to-actions and special highlights. */
    --color-accent-500: #7dd2ed;
    --color-accent: var(--color-accent-500);
    --color-accent-hover: color-mix(
        in srgb,
        var(--color-accent) var(--opacity-hover),
        transparent
    );

    /** @theme A very light color, used for text and bright UI elements. */
    --color-light-500: hsl(0deg 0% 95%);
    --color-light: var(--color-light-500);
    --color-light-hover: color-mix(
        in srgb,
        var(--color-light) var(--opacity-hover),
        transparent
    );

    /** @theme A very dark color, used for backgrounds and dark UI elements. */
    --color-dark-500: hsl(0deg 0% 1%);
    --color-dark: var(--color-dark-500);
    /** @theme A subtle hover effect for dark elements, mixing in a hint of light. */
    --color-dark-hover: color-mix(in srgb, var(--color-light) 5%, transparent);

    /**
     * ========================================================================
     * Typography
     *
     * Defines the font families used throughout the application.
     * ========================================================================
     */

    /** @theme The primary sans-serif font family. */
    --font-sans: var(--font-geist-sans, ui-sans-serif, system-ui, sans-serif);
    /** @theme The primary monospace font family. */
    --font-mono: var(
        --font-geist-mono,
        ui-monospace,
        SFMono-Regular,
        monospace
    );

    /**
     * ========================================================================
     * UI Metrics & Effects
     *
     * Defines tokens for border radius, blur effects, and animations.
     * ========================================================================
     */

    --radius-4xl: 1rem;
    /** @theme The default application-wide border radius for all elements. */
    --radius: var(--radius-4xl);

    --backdrop-blur-xs: 10px;
    /** @theme The default application-wide backdrop blur. */
    --backdrop-blur: var(--backdrop-blur-xs);

    /**
     * ========================================================================
     * Animations
     * ========================================================================
     */

    /** @theme A slow, subtle pulse animation. */
    --animate-pulse-slow: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    /** @theme A gentle floating animation. */
    --animate-float: float 6s ease-in-out infinite;

    /**
     * ========================================================================
     * Opacity Tokens
     *
     * Defines reusable opacity values for UI elements.
     * ========================================================================
     */

    /** @theme The opacity level applied to elements on hover. */
    --opacity-hover: 50%;
    /** @theme The base opacity level for card backgrounds. */
    --opacity-card: 70%;

    /** @keyframes for the --animate-float animation. */
    @keyframes float {
        0%,
        100% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-10px);
        }
    }
}

html {
    /* Ensure smooth scrolling */
    scroll-behavior: smooth;
    /* Ensure no overflow issues at the bottom of the page. */
    overscroll-behavior: none;
    /* Prevent mobile scroll jitter */
    height: 100%;
    overflow: hidden;
}

body {
    /* Disable bounce/overscroll on the body element as well (some browsers require both) */
    overscroll-behavior: none;
    background: #000000;
    color: #ffffff;
    font-family: var(--font-geist-sans), system-ui, sans-serif;
    position: relative;
    min-height: 100vh;
    /* Mobile scroll optimization */
    height: 100%;
    overflow-x: hidden;
    overflow-y: auto; /* Enable vertical scrolling on body */
}

/* Fixed background using pseudo-element - works on mobile */
body::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("/background.jpg");
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: scroll;
    z-index: -1;
}

/* Additional mobile optimization */
@media (max-width: 768px) {
    body::before {
        background-attachment: scroll;
        background-size: cover;
        width: 100vw;
        height: 100vh;
    }
}
